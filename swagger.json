{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "YourPet backPart docs",
    "description": "Documentation on the backend part for the site YourPet, go-it students, representatives of team 1"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://yorpet-backpart-deployment.onrender.com" }
  ],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoints" },
    { "name": "Pets", "description": "Pets endpoints" },
    { "name": "Notices", "description": "Notices endpoints" }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegAndLogResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Conflict - Email already in use"
          }
        }
      }
    },


    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegAndLogResponse"
                }
              }
            }
          },

          "400": {
            "description": "Login error"
          }
        }
      }
    },


    "/api/auth/updateUser": {
      "put": {
        "tags": ["Auth"],
        "security": [{ "Bearer": [] }],
        "summary": "User update",
        "description": "update",
        "requestBody": {
          "description": "big User object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdatedRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fullUserInfo"
                }
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },


    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "security": [{ "Bearer": [] }],
        "summary": "User logout",
        "description": "Logs out the authenticated user and clears their token.",

        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },


    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "security": [{ "Bearer": [] }],
        "summary": "Take current user",
        "description": "Get cuurent info about authenticated user ",

        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },


    "/api/pets/add-pet": {
      "post": {
        "tags": ["Pets"],
        "security": [{ "Bearer": [] }],
        "summary": "Add a new pet",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Pet`s object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/addPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },


    "/api/pets/delete-pet/:petId": {
      "delete": {
        "tags": ["Pets"],
        "security": [{ "Bearer": [] }],
        "summary": "Delete pet by id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Pet`s id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pet successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deletePetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },


    "/api/notice/add-notice": {
      "post": {
        "tags": ["Notices"],
        "security": [{ "Bearer": [] }],
        "summary": "Add a new notice",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Notice`s object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/addNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notice successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },


    "/api/notice/:noticeId": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get a notice by id",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "Notice`s id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getOneNoticeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },


    "/api/notice/": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get a notices by category and search",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Notices category",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "for searching by words",
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Notices limit in one page",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Notices fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getNoticesByCategoryRes"
                }
              }
            }
          },
          "404": {
            "description": "No notices found"
          }
        }
      }
    },


    "/api/notice/add-to-favorites/:noticeId":{
      "patch":{
        "tags": ["Notices"],
        "security": [{"BearerAuth": []}],
        "summary": "Add to favourite Pets",
         "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the notice to add to favorites"
          }
        ],
        "responses": {
          "200": {
            "description": "Notice added to favorites", "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Notice added to favorites"
                }
              }
            }
          },
          "404": {
            "description": "Notice not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }

      }
    },


      "/api/notice/favorites": {
      "get": {
        "tags":["Notices"],
 "security": [{"BearerAuth": []}],
        "summary": "Get user's favorite Pets",
        "responses": {
          "200": {
            "description": "List of favorite Pets",
            "schema": {
              "type": "array",
              "items": {
               "$ref": "#/components/definitions/Notice"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
       
      }
    } ,


     "/api/notice/remove-from-favorites/:noticeId": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Remove Pets from favorites",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the notice to be removed from favorites"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Notice removed from favorites",
            "content": {
              "application/json": {
                "example": {
                  "message": "Notice removed from favorites"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Notice not found"
          },
          "500": {
            "description": "Internal server error"
                }
              }
            }
          }
        },


  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's Name",
            "example": "User"
          },

          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty1234"
          }
        }
      },


      "RegAndLogResponse": {
        "type": "object",

        "properties": {
          "user": {
            "type": "object",
            "description": "User's object with all inform",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's Name",
                "example": "User"
              },

              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatar": {
                "type": "string",
                "description": "User's avatar"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User`s authorization token"
          }
        }
      },


      "CurrentResponse": {
        "type": "object",

        "properties": {
          "name": {
            "type": "string",
            "description": "User's Name",
            "example": "User"
          },

          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "example": "avatars/64e29ccf9104a0a862145273rose.jpg"
          }
        }
      },


      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty1234"
          }
        }
      },


      "UpdatedRequest": {
        "type": "object",
        "required": ["email", "name", "city", "phone", "birthday", "avatar"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's Name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@mail.com"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "kyiv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380000000000"
          },
          "birthday": {
            "type": "string",
            "description": "User's date of birthday",
            "format": "date",
            "example": "00.00.0000"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar(must be  less then 3mb)",
            "format": "binary"
          }
        }
      },


      "fullUserInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's Name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@mail.com"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "kyiv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380000000000"
          },
          "birthday": {
            "type": "string",
            "description": "User's date of birthday",
            "format": "date-time",
            "example": "2023-08-20T23:07:46.529+00:00"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar link"
          }
        }
      },


      "addPetRequest": {
        "type": "object",
        "required": ["name", "dateOfBirth", "type", "avatar"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet`s name",
            "example": "Jack"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet`s birthday",
            "example": "07.07.2007"
          },
          "type": {
            "type": "string",
            "description": "Pet`s type",
            "example": "Shepard dog"
          },
          "avatar": {
            "type": "string",
            "description": "Pet`s photo (must be less than 3mb)",
            "format": "binary"
          },
          "comments": {
            "type": "string",
            "description": "Comment about your pet",
            "example": "My fluffy cat"
          }
        }
      },


      "addPetResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet`s name",
            "example": "Jack"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet`s birthday",
            "example": "07.07.2007"
          },
          "type": {
            "type": "string",
            "description": "Pet`s type",
            "example": "Shepard dog"
          },
          "avatar": {
            "type": "string",
            "description": "Pet`s photo (must be less than 3mb)",
            "format": "binary"
          },
          "comments": {
            "type": "string",
            "description": "Comment about your pet",
            "example": "My fluffy cat"
          },
          "_id": {
            "type": "string",
            "description": "Pet`s id",
            "example": "64e5af0cc491872a141147a6"
          }
        }
      },


      "deletePetResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message about deleted pet",
            "example": "Pet successfully deleted"
          }
        }
      },


      "addNoticeRequest": {
        "type": "object",
        "required": [
          "category",
          "title",
          "name",
          "dateOfBirth",
          "type",
          "avatar",
          "sex",
          "location",
          "price"
        ],
        "properties": {
          "category": {
            "type": "string",
            "description": "Notice`s category",
            "example": "in-good-hands"
          },
          "title": {
            "type": "string",
            "description": "Notice`s title",
            "example": "The kitten is looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet`s name",
            "example": "Melissa"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet`s birthday",
            "example": "01.01.1991"
          },
          "type": {
            "type": "string",
            "description": "Pet`s type",
            "example": "Norwegian forest cat"
          },
          "avatar": {
            "type": "string",
            "description": "Pet`s photo (must be less than 3mb)",
            "format": "binary"
          },
          "sex": {
            "type": "string",
            "description": "Pet`s gender",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet`s location",
            "example": "Kyiv"
          },
          "price": {
            "type": "number",
            "description": "Pet`s price (for sell category only)",
            "example": "100"
          },
          "comments": {
            "type": "string",
            "description": "Some comment in the notice",
            "example": "Gentle and intelligent cat"
          }
        }
      },


      "addNoticeResponse": {
        "type": "object",
        "favorite": {
          "type": "array",
          "description": "User who added notice to favorites",
          "example": []
        },
        "properties": {
          "_id": {
            "type": "string",
            "description": "Notice`s id",
            "example": "64e4b11aae88711dbf14a156"
          },
          "category": {
            "type": "string",
            "description": "Notice`s category",
            "example": "in-good-hands"
          },
          "title": {
            "type": "string",
            "description": "Notice`s title",
            "example": "The kitten is looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet`s name",
            "example": "Melissa"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet`s birthday",
            "example": "01.01.1991"
          },
          "type": {
            "type": "string",
            "description": "Pet`s type",
            "example": "Norwegian forest cat"
          },
          "avatar": {
            "type": "string",
            "description": "Pet`s photo (must be less than 3mb)",
            "format": "binary"
          },
          "sex": {
            "type": "string",
            "description": "Pet`s gender",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet`s location",
            "example": "Kyiv"
          },
          "owner": {
            "type": "string",
            "description": "Id of the user who added the notice",
            "example": "64e472f86c786ae0f94d3af7"
          },
          "price": {
            "type": "number",
            "description": "Pet`s price (for sell category only)",
            "example": "100"
          },
          "comments": {
            "type": "string",
            "description": "Some comment in the notice",
            "example": "Gentle and intelligent cat"
          }
        }
      },
      
      "getOneNoticeResponse": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "array",
            "description": "User who added notice to favorites",
            "example": []
          },
          "_id": {
            "type": "string",
            "description": "Notice`s id",
            "example": "64e4b11aae88711dbf14a156"
          },
          "category": {
            "type": "string",
            "description": "Notice`s category",
            "example": "in-good-hands"
          },
          "title": {
            "type": "string",
            "description": "Notice`s title",
            "example": "The kitten is looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet`s name",
            "example": "Melissa"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet`s birthday",
            "example": "01.01.1991"
          },
          "type": {
            "type": "string",
            "description": "Pet`s type",
            "example": "Norwegian forest cat"
          },
          "avatar": {
            "type": "string",
            "description": "Pet`s photo (must be less than 3mb)",
            "format": "binary"
          },
          "sex": {
            "type": "string",
            "description": "Pet`s gender",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet`s location",
            "example": "Kyiv"
          },
          "owner": {
            "type": "string",
            "description": "Id of the user who added the notice",
            "example": "64e472f86c786ae0f94d3af7"
          },
          "price": {
            "type": "number",
            "description": "Pet`s price (for sell category only)",
            "example": "100"
          },
          "comments": {
            "type": "string",
            "description": "Some comment in the notice",
            "example": "Gentle and intelligent cat"
          }
        }
      },

      "getNoticesByCategoryRes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "favorite": {
              "type": "array",
              "description": "User who added notice to favorites",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "Notice`s id",
              "example": "64e4b11aae88711dbf14a156"
            },
            "category": {
              "type": "string",
              "description": "Notice`s category",
              "example": "in-good-hands"
            },
            "title": {
              "type": "string",
              "description": "Notice`s title",
              "example": "The kitten is looking for a home"
            },
            "name": {
              "type": "string",
              "description": "Pet`s name",
              "example": "Melissa"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Pet`s birthday",
              "example": "01.01.1991"
            },
            "type": {
              "type": "string",
              "description": "Pet`s type",
              "example": "Norwegian forest cat"
            },
            "avatar": {
              "type": "string",
              "description": "Pet`s photo (must be less than 3mb)",
              "format": "binary"
            },
            "sex": {
              "type": "string",
              "description": "Pet`s gender",
              "example": "female"
            },
            "location": {
              "type": "string",
              "description": "Pet`s location",
              "example": "Kyiv"
            },
            "owner": {
              "type": "string",
              "description": "Id of the user who added the notice",
              "example": "64e472f86c786ae0f94d3af7"
            },
            "price": {
              "type": "number",
              "description": "Pet`s price (for sell category only)",
              "example": "100"
            },
            "comments": {
              "type": "string",
              "description": "Some comment in the notice",
              "example": "Gentle and intelligent cat"
            }
            
          }
        }
      }
    },


    "definitions": {
    "Notice": {
      "type": "object",
      "properties": {
        "property1": {
          "type": "string"
        },
        "property2": {
          "type": "number"
        },
        "favorite": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },


    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
